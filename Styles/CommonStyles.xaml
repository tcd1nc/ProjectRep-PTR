<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrls="clr-namespace:PTR.Controls"
                    xmlns:local="clr-namespace:PTR" >

    <Style x:Key="textlabel" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Padding" Value="0,2,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="gridtextlabel" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ErrorMessageLbl" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="0,2,0,2"/>
        <Setter Property="Padding" Value="0,6,0,6"/>
        <Setter Property="Foreground" Value="GreenYellow"/>
        <Setter Property="Background" Value="Gray"/>
    </Style>

    <Style x:Key="lvidlabel" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="2,0,2,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="gridtextbox" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="AllowDrop" Value="False"/>
    </Style>

    <Style x:Key="dgstyle" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="SelectionUnit" Value="Cell"/>
        <Setter Property="RowHeight" Value="28"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="FrozenColumnCount" Value="0"/>
    </Style>

    <Style x:Key="dgautogenstyle" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="True"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="RowHeight" Value="24"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="FrozenColumnCount" Value="1"/>
    </Style>

    <Style x:Key="bdlessgridtextbox" TargetType="TextBox" BasedOn="{StaticResource textbox}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="commentsbox" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="monthpicker" TargetType="ctrls:MonthUpDown">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Margin" Value="2,2,2,2" />
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Step" Value="1"/>
        <Setter Property="Format" Value="MMM-yyyy"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="90"/>
    </Style>

    <Style x:Key="datepicker" TargetType="DatePicker">
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
    </Style>

    <Style x:Key="gridcombo" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="AllowDrop" Value="False"/>
    </Style>

    <Style x:Key="ddstyle" TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="Blue"/>
    </Style>

    <Style x:Key="lstbox" TargetType="ListBox">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="AllowDrop" Value="False"/>
    </Style>

    <Style x:Key="chkbox" TargetType="CheckBox">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="2,2,2,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="stkpanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
    </Style>

    <Style x:Key="grpbox" TargetType="GroupBox">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Blue"/>
    </Style>

    <Style x:Key="tooltiptextstyle" TargetType="TextBlock">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MaxWidth" Value="350"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>


    <DataTemplate x:Key="SalesFunnelStageTemplate" >
        <TextBlock Text="{Binding SalesFunnelStage}" Padding="4,2,4,2" Background="{Binding StatusColour, FallbackValue=Transparent}" />
    </DataTemplate>

    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
        <Setter Property="Padding" Value="4,0,4,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#F5F5F5" />
                    <GradientStop Offset="1" Color="#DCDCDC" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
        <!--<Setter Property="TextBlock.TextWrapping" Value="NoWrap"/>-->
        <Setter Property="TextBlock.MaxHeight" Value="30"/>
        <Setter Property="TextBlock.MinHeight" Value="24"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>

    </Style>

    <DataTemplate x:Key="StatusTemplate" >
        <TextBlock Text="{Binding Status}" Padding="4,2,4,2" Background="{Binding StatusColour, FallbackValue=White}" />
    </DataTemplate>


    <Style x:Key="ExRateColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
        <Setter Property="Height" Value="50"/>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HasDropShadow" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border BorderThickness="1" CornerRadius="2" BorderBrush="Blue" Padding="2,2,2,2" Background="LemonChiffon" >
                        <ContentPresenter TextBlock.Foreground="Black"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:StringToDateConverter x:Key="StrToDtConv" />
    <local:StringToIntegerConverter x:Key="StrToIntConv"/>
    <local:StringToDecimalConverter x:Key="StrToDecConv"/>

    <ControlTemplate x:Key="StringTemplate">
        <StackPanel Orientation="Horizontal" Margin="2,2,2,2" ToolTip="{Binding ToolTip}">
            <TextBlock Style="{StaticResource textlabel}" Text="{Binding DisplayName}" Width="100"/>
            <TextBox Style="{StaticResource textbox}" Padding="2,0,2,0" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" />
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="DateTemplate">
        <StackPanel Orientation="Horizontal" Margin="2,2,2,2" ToolTip="{Binding ToolTip}">
            <TextBlock Style="{StaticResource textlabel}" Text="{Binding DisplayName}" Width="100" />
            <ctrls:MonthUpDown Width="100" Margin="2,0,2,0" Style="{StaticResource monthpicker}"
                  Value="{Binding Value, Converter={StaticResource StrToDtConv}, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" />
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="IntTemplate">
        <StackPanel Orientation="Horizontal" Margin="2,2,2,2" ToolTip="{Binding ToolTip}">
            <TextBlock Style="{StaticResource textlabel}" Text="{Binding DisplayName}" Width="100" />
            <ctrls:IntegerUpDown Value="{Binding Value, Converter={StaticResource StrToIntConv}, FallbackValue=0}"/>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="DecTemplate">
        <StackPanel Orientation="Horizontal" Margin="2,2,2,2" ToolTip="{Binding ToolTip}">
            <TextBlock Style="{StaticResource textlabel}" Text="{Binding DisplayName}" Width="100" />
            <ctrls:DecimalUpDown Value="{Binding Value, Converter={StaticResource StrToDecConv}, FallbackValue=0}" />
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="BoolTemplate">
        <StackPanel Orientation="Horizontal" Margin="2,2,2,2" ToolTip="{Binding ToolTip}">
            <CheckBox Content="{Binding DisplayName}" IsChecked="{Binding Value, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" Style="{StaticResource chkbox}" Width="150"/>
        </StackPanel>
    </ControlTemplate>


    <Style x:Key="LinkButton2" TargetType="ButtonBase">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock  x:Name="innerText" VerticalAlignment="Center" >
                        <ContentPresenter/>
                    </TextBlock>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="true">
                            <Setter TargetName="innerText" Property="Foreground" Value="Red" />
                            <Setter TargetName="innerText" Property="TextDecorations" Value="Underline" />
                        </Trigger>

                        <Trigger Property="Button.IsEnabled" Value="false">
                            <Setter TargetName="innerText" Property="Foreground" Value="Gray" />
                            <Setter TargetName="innerText" Property="TextBlock.Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Blue"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <DataTemplate x:Key="ColumnHeaderFilterTemplate" >
        <StackPanel Orientation="Horizontal" >
            <TextBlock Text="{Binding Caption}" Margin="2,2,2,2" />
            <ToggleButton KeyboardNavigation.AcceptsReturn="False" KeyboardNavigation.IsTabStop="False" >
                <ToggleButton.Template>
                    <ControlTemplate>
                        <StackPanel Orientation="Vertical" ToolTip="Column filter"  >
                            <Image Height="18" Width="18"  >
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="/PTR;component/Images/BoldBlueFilter.png"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsApplied}" Value="true">
                                                <Setter Property="Source" Value="/PTR;component/Images/BoldRedFilter.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <Popup IsOpen="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" 
                                        Placement="Bottom" StaysOpen="False" >
                                <Border Background="White" BorderBrush="Gray" BorderThickness="1,1,1,1">
                                    <StackPanel Margin="5,5,5,5" Orientation="Vertical" >
                                        <ScrollViewer VerticalScrollBarVisibility="Auto" >
                                            <ListBox BorderThickness="0" ItemsSource="{Binding FilterData}" MaxHeight="600">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Description}" />
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </ScrollViewer>
                                        <StackPanel Orientation="Horizontal">
                                            <Button Margin="0,0,0,0" Style="{StaticResource LinkButton2}" Content="Apply" ToolTip="Apply filter"
                                                    Command="{Binding DataContext.ApplyFilterPopup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                                    CommandParameter="{Binding DataContext.ColumnName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"/>
                                            <Button Margin="10,0,0,0" Style="{StaticResource LinkButton2}" Content="Reset" ToolTip="Reset filter to select all"
                                                    Command="{Binding DataContext.ResetFilterPopup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                                    CommandParameter="{Binding DataContext.ColumnName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" />
                                            <Button Margin="10,0,0,0" Style="{StaticResource LinkButton2}" Content="Clear" ToolTip="Clear filter selection"
                                                    Command="{Binding DataContext.ClearFilterPopup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                                    CommandParameter="{Binding DataContext.ColumnName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" />
                                        </StackPanel>
                                    </StackPanel>

                                </Border>
                            </Popup>
                        </StackPanel>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionsTemplate" >
        <StackPanel Orientation="Horizontal">
            <Image Source="/PTR;component/Images/compass.ico" Height="16" Width="20" Margin="2,0,0,0">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="ToolTip" Value="Overdue Monthly Activity"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OverdueActivity}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Image Source="/PTR;component/Images/compass.ico" Height="16" Width="20" Margin="2,0,0,0">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="ToolTip" Value="Completion Required"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RequiringCompletion}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Image Source="/PTR;component/Images/compass.ico" Height="16" Width="20" Margin="2,0,0,0">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="ToolTip" Value="Incomplete Evaluation Plan"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IncompleteEP}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Image Source="/PTR;component/Images/compass.ico" Height="16" Width="20" Margin="2,0,0,0">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="ToolTip" Value="Evaluation Plan Required"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MissingEP}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Image Source="/PTR;component/Images/compass.ico" Height="16" Width="20" Margin="2,0,0,0">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="ToolTip" Value="Milestone Due"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MilestoneDue}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </StackPanel>
    </DataTemplate>

</ResourceDictionary>