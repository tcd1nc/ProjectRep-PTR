<Window x:Class="PTR.Views.EditCustomerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PTR.Views"
        xmlns:models="clr-namespace:PTR.Models"        
        mc:Ignorable="d"        
        Icon="/PTR;component/Images/people.ico"
        xmlns:loc="clr-namespace:PTR"
        WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow" Width="950" Height="650"        
        loc:WindowBehavior.WindowClosing="{Binding WindowClosing}" 
        loc:DialogCloser.DialogClose="{Binding CloseWindowFlag}" 
        x:Name="mainwindow"
        Title="Customer Sites" >
    
    <Window.Resources>
         <BooleanToVisibilityConverter x:Key="BoolToVis" /> 
    </Window.Resources>
 
    <Grid>
        <DockPanel LastChildFill="True">
            <Grid DockPanel.Dock="Top" Height="28" Margin="0,4,0,0">
                <StackPanel Orientation="Horizontal" Margin="2,0,0,0" >
                    <Button x:Name="add" Template="{StaticResource CRUDButton}" Content="Add New Customer" Tag="Add" ToolTip="Add New Customer" Command="{Binding AddNew}" Margin="10,0,0,0">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAddMode}" Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="cancel" Template="{StaticResource CRUDButton}" Tag="Delete" Content="Cancel New Customer" ToolTip="Cancel adding new Customer" Command="{Binding CancelNewCustomer}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAddMode}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
            <Grid DockPanel.Dock="Bottom" Height="32">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="120"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Content="Save" Command="{Binding Save}" Style="{StaticResource filterButtonStyle}" TextBlock.TextAlignment="Center" HorizontalAlignment="Center" ToolTip="Save changes"/>
                <TextBlock Grid.Column="1" Text="{Binding DataMessageLabel}" Style="{StaticResource ErrorMessageLbl}" Visibility="{Binding ShowDataMessage, Converter={StaticResource BoolToVis}, UpdateSourceTrigger=PropertyChanged}" />
                <Button Grid.Column="2" Content="Close" Command="{Binding Cancel}" TextBlock.TextAlignment="Center" Style="{StaticResource filterButtonStyle}" 
                        HorizontalAlignment="Center" ToolTip="Close window"/>
            </Grid>

            <Grid DockPanel.Dock="Left" Margin="4,2,2,2" VerticalAlignment="Top" HorizontalAlignment="Left">
            <TreeView x:Name="tv" ItemsSource="{Binding Nodes, IsAsync=True}" HorizontalAlignment="Stretch" IsEnabled="{Binding TVIsEnabled}">
   
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />

                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type models:TreeViewNodeModel}" >
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}" Foreground="Blue" Width="150"  />
                            <HierarchicalDataTemplate.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type models:TreeViewNodeModel}" >
                                    <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}" Foreground="Green" Width="150" />
                                    <HierarchicalDataTemplate.ItemTemplate>
                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type models:TreeViewNodeModel}" >
                                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}" Foreground="Red" Width="150"/>
                                            <HierarchicalDataTemplate.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}" Width="250" />
                                                </DataTemplate>
                                            </HierarchicalDataTemplate.ItemTemplate>
                                        </HierarchicalDataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>
                                </HierarchicalDataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                            <Setter Property="loc:TVNodeSelected.TreeViewItemSelected" Value="{Binding DataContext.SelectCustomerNode, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                            <Setter Property="loc:TVNodeSelected.TVSelectedCommandParameter" Value="{Binding .}"/>
                         
                            <Setter Property="Background" Value="Transparent"/>
                                               
                            <Style.Triggers>
                                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <DataTrigger Binding="{Binding NodeTypeID}" Value="0">
                                    <Setter Property="IsSelected" Value="False"/>
                                    <Setter Property="Focusable" Value="False"/>
                                </DataTrigger>
                                
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                                
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>

            <Grid Margin="0,2,4,2" VerticalAlignment="Top" HorizontalAlignment="Left"  IsEnabled="{Binding IsEnabled}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="280"/>
                    <ColumnDefinition Width="10"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="28"/>
                </Grid.RowDefinitions>
                   
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:" ToolTip="Customer's name" Style="{StaticResource gridtextlabel}"/>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Customer.Name, UpdateSourceTrigger=PropertyChanged}" Background="FloralWhite" Style="{StaticResource gridtextbox}"/>
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Location:" ToolTip="Location of customer site" Style="{StaticResource gridtextlabel}"/>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Customer.Location, UpdateSourceTrigger=PropertyChanged}" Background="BlanchedAlmond" Style="{StaticResource gridtextbox}"/>
                <TextBlock Grid.Row="2" Grid.Column="0" Text="Country:" Style="{StaticResource gridtextlabel}" ToolTip="Select Country" />
                <ComboBox Grid.Row="2" Grid.Column="1" 
                          ItemsSource="{Binding Countries}" 
                          Background="Beige" 
                          Style="{StaticResource gridcombo}" ItemContainerStyle="{StaticResource ddstyle}" 
                        DisplayMemberPath="Name"
                        SelectedValuePath="ID" 
                        SelectedValue="{Binding Customer.CountryID, UpdateSourceTrigger=PropertyChanged}"/>
                         

                <TextBlock Grid.Row="3" Grid.Column="0" Text="Sales Region:" Style="{StaticResource gridtextlabel}" ToolTip="Select Sales Region" />
                <ComboBox Grid.Row="3" Grid.Column="1"
                          Style="{StaticResource gridcombo}" ItemContainerStyle="{StaticResource ddstyle}"
                            ItemsSource="{Binding SalesRegions}" Background="Beige"
                            DisplayMemberPath="Name" 
                            SelectedValuePath="ID" 
                            SelectedValue="{Binding Customer.SalesRegionID, UpdateSourceTrigger=PropertyChanged}"/>

                <TextBlock Grid.Row="4" Grid.Column="0" Text="Customer Number:" ToolTip="Customer number used in accounting system" Style="{StaticResource gridtextlabel}"  />
                <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Customer.Number, UpdateSourceTrigger=PropertyChanged}" Background="Cornsilk" Style="{StaticResource gridtextbox}"/>
                <TextBlock Grid.Row="5" Grid.Column="0" Text="Deleted:" Style="{StaticResource gridtextlabel}" ToolTip="If this is not enabled, it is because there are Projects for this Customer" />
                <CheckBox Grid.Row="5" Grid.Column="1" IsEnabled="{Binding Customer.IsEnabled}" IsChecked="{Binding Customer.Deleted, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource chkbox}"/>
            </Grid>
                
        </DockPanel>
    </Grid>
</Window>
